#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <mysql.h>
#include <time.h>
#include <stdlib.h>
#include <string.h>
#define PAGES 500
#define WICKETS 3
int cointoss();
void batting(int* runs);
void bowling(int* runs);

MYSQL* conn;
MYSQL_RES* res;
MYSQL_ROW row;

void connect_to_mysql() {
	conn = mysql_init(NULL);
	if (conn == NULL) {
		fprintf(stderr, "mysql_init() failed\n");
		exit(EXIT_FAILURE);
	}

	/*Connect to the database*/
	if (mysql_real_connect(conn, "hostname", "username", "password", "database", port, NULL, 0) == NULL) {
		fprintf(stderr, "mysql_real_connect() failed: %s\n", mysql_error(conn));
		mysql_close(conn);
		exit(EXIT_FAILURE);
	}
}

void insert_match_details(const char* toss, const char* inning1, int runs1, const char* inning2, int runs2, const char* result) {
	char query[512];
	sprintf(query, "INSERT INTO match_details (toss, innning1, runs1, innning2, runs2, result) VALUES ('%s', '%s', %d, '%s', %d, '%s')", toss, inning1, runs1, inning2, runs2, result);

	if (mysql_query(conn, query)) {
		fprintf(stderr, "INSERT error: %s\n", mysql_error(conn));
	}
	else {
		printf("Match details inserted successfully!\n");
	}
}

int main(void)
{
	/*ASCII art*/
	printf(R"EOF(
__________ ________   ________   ____  __.     ___________________.____________  ____  __.______________________
\______   \\_____  \  \_____  \ |    |/ _|     \_   ___ \______   \   \_   ___ \|    |/ _|\_   _____/\__    ___/
 |    |  _/ /   |   \  /   |   \|      <       /    \  \/|       _/   /    \  \/|      <   |    __)_   |    |   
 |    |   \/    |    \/    |    \    |  \      \     \___|    |   \   \     \___|    |  \  |        \  |    |   
 |______  /\_______  /\_______  /____|__ \      \______  /____|_  /___|\______  /____|__ \/_______  /  |____|   
        \/         \/         \/        \/             \/       \/            \/        \/        \/            
)EOF");

	/*Connect to MySQL database*/
	connect_to_mysql();

	/*Instruction*/
	int instructions;
	printf("\nDo you want to the instructions before proceeding (Yes - 0 | No - 1) : ");
	scanf_s("%d", &instructions);
	while (instructions < 0 || instructions > 1)
	{
		printf("\nYes is 0 and No is 1. Do you want to the instructions before proceeding : ");
		scanf_s("%d", &instructions);
	}
	if (instructions == 0)
	{
		printf("\n\n**********INSTRUCTIONS**********\n");
		printf("\n1. A coin toss decides whether player gets to bat or bowl first.\n2. A book of 500 pages is used each player has 3 wickets each.\n");
		printf("3. When the user presses any key a random number will generated which simulates a page being turned and the last digit\n   on the page number will be the players value and the program will generate one as well.\n");
		printf("4. The value generated by the batter will be the runs.\n");
		printf("5. If batter value is 0 or is the same as the bowler then the batter is out.\n");
		printf("6. Each batter gets 3 wickets, player with the highest runs wins.\n");
	}
	(void)time(NULL);
	srand((unsigned int)time(NULL));
	int toss = cointoss();
	int bat = 0;
	int bowl = 0;

	char toss_result[6];
	char inning1[6], inning2[6];
	int runs1, runs2;

	if (toss == 1)
	{
		printf("\n\n**********INNING 1**********\n\n");
		strcpy_s(inning1, "Bat");
		batting(&bat);
		printf("\n\n**********INNING 2**********\n");
		strcpy_s(inning2, "Bowl");
		bowling(&bowl);
		runs1 = bat;
		runs2 = bowl;
		if (bat > bowl) {
			printf("\n\n**********YOU WON THE MATCH!**********\n\n");
			strcpy_s(toss_result, "Won");
			insert_match_details(toss_result, inning1, runs1, inning2, runs2, "You Won");
		}
		else if (bat == bowl) {
			printf("\n\n**********MATCH DRAWN!**********\n\n");
			strcpy_s(toss_result, "Won");
			insert_match_details(toss_result, inning1, runs1, inning2, runs2, "Draw");
		}
		else {
			printf("\n\n**********YOU LOST THE MATCH!**********\n\n");
			strcpy_s(toss_result, "Won");
			insert_match_details(toss_result, inning1, runs1, inning2, runs2, "You Lost");
		}
	}
	else
	{
		printf("\n\n**********INNING 1**********\n\n");
		strcpy(inning1, "Bowl");
		bowling(&bowl);
		printf("\n\n**********INNING 2**********\n");
		strcpy(inning2, "Bat");
		batting(&bat);
		runs1 = bat;
		runs2 = bowl;

		if (bowl > bat) {
			printf("\n\n**********YOU WON THE MATCH!**********\n\n");
			strcpy(toss_result, "Lost");
			insert_match_details(toss_result, inning1, runs1, inning2, runs2, "You Won");
		}
		else if (bat == bowl) {
			printf("\n\n**********MATCH DRAWN!**********\n\n");
			strcpy(toss_result, "Lost");
			insert_match_details(toss_result, inning1, runs1, inning2, runs2, "Draw");
		}
		else {
			printf("\n\n**********YOU LOST THE MATCH!**********\n\n");
			strcpy(toss_result, "Lost");
			insert_match_details(toss_result, inning1, runs1, inning2, runs2, "You Lost");
		}
	}
	/*Close MySQL Connection*/
	mysql_close(conn);
	return 0;
}


/*Coin toss*/
int cointoss()
{
	int toss = rand() % 2;
	int call;
	int heads = 0, tails = 1;
	int choice;
	int bat = 0, bowl = 1;
	printf("\nCoin Toss :\n");
	printf("Heads(0) or Tails(1) ? ");
	scanf_s("%d", &call);
	while (call < 0 || call > 1)
	{
		printf("Heads is 0 or Tails is 1 ? ");
		scanf_s("%d", &call);
	}
	if (toss == call)
	{
		printf("You won the toss !\n");
		printf("Do you want to Bat(0) or Bowl(1) ? ");
		scanf_s("%d", &choice);
		while (choice < 0 || choice > 1)
		{
			printf("To Bat is 0 or to Bowl is 1 ?\n");
			scanf_s("%d", &choice);
		}
		if (choice == 0)
		{
			printf("You chose to bat !\n");
			return 1;
		}
		else
		{
			printf("You chose to bowl !\n");
			return 0;
		}
	}
	else
	{
		choice = rand() % 2;
		printf("You lost the toss !\n");
		if (choice == 0)
		{
			printf("You get to bat !\n");
			return 1;
		}
		else
		{
			printf("You get to bowl !\n");
			return 0;
		}
	}
}

/*batting*/
void batting(int* runs)
{
	int wiks = 0;
	int playerval, compval;
	int playervalld, compvalld;
	int ballcounter = 0;
	while (WICKETS > wiks)
	{
		playerval = rand() % 501;
		compval = rand() % 501;
		playervalld = playerval % 10;
		compvalld = compval % 10;
		*runs += playervalld;
		ballcounter++;
		int tempchar;
		if (playervalld == compvalld || playervalld == 0)
		{
			tempchar = getchar();
			printf("\nBatter has %d and Bowler has %d\n", playervalld, compvalld);
			printf("%d wickets down! in ball %d\n", wiks + 1, ballcounter);
			printf("Current Run Rate : %.2f\n", (float)*runs / ballcounter);
			wiks++;
		}
		else if (WICKETS > wiks)
		{
			tempchar = getchar();
			printf("%d runs scored in ball %d, Total is now %d", playervalld, ballcounter, *runs);
		}
	}
	printf("ALL OUT!\n");
	printf("You scored a total of %d runs.\n", *runs);
	printf("You have faced %d balls.\n", ballcounter);
}


/*Bowling*/
void bowling(int* runs)
{
	int wiks = 0;
	int playerval, compval;
	int playervalld, compvalld;
	int ballcounter = 0;
	int tempchar;
	while (WICKETS > wiks)
	{
		playerval = rand() % 501;
		compval = rand() % 501;
		playervalld = playerval % 10;
		compvalld = compval % 10;
		*runs += playervalld;
		ballcounter++;
		if (playervalld == compvalld || playervalld == 0)
		{
			printf("\nBatter has %d and Bowler has %d\n", playervalld, compvalld);
			printf("%d wickets down! in ball %d\n", wiks + 1, ballcounter);
			printf("Economy Rate : %.2f\n", *runs / ((float)ballcounter / 6));
			wiks++;
			tempchar = getchar();
		}
		else if (WICKETS > wiks)
		{
			tempchar = getchar();
			printf("%d runs scored in ball %d, Total is now %d", playervalld, ballcounter, *runs);
		}
	}
	printf("ALL OUT!\n");
	printf("Opposition scored a total of %d runs.\n", *runs);
	printf("Opposition has faced %d balls.\n", ballcounter);
}
